@model RouteMaster.Models.ViewModels.AttractionEditVM

@{
    ViewBag.Title = "編輯景點";
}

<h2>編輯景點</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="mb-3">
            類別

            @Html.DropDownListFor(model => model.AttractionCategoryId, new SelectList(ViewBag.AttractionCategories, "Id", "Name"), "Please select a category", new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.AttractionCategoryId, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            縣市

            @Html.DropDownListFor(model => model.RegionId, new SelectList(ViewBag.Regions, "Id", "Name", Model.RegionId), "Please select a region", new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            鄉鎮市區

            @Html.DropDownListFor(model => model.TownId, new SelectList(ViewBag.Towns, "Id", "Name", Model.TownId), "Please select a town", new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.TownId, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            標籤

            @foreach (var tag in ViewBag.Tags)
            {
                <div>
                    <input type="checkbox" name="TagId" value="@tag.Id" id="tag_@tag.Id" @(Model.TagId.Contains(tag.Id)?"checked":null)>
                    <label for="tag_@tag.Id">@tag.Name</label>
                </div>
            }

            @*@Html.DropDownListFor(model => model.TagId, new SelectList(ViewBag.Tags, "Id", "Name", Model.TagId), null, new { @class = "form-select" })*@
            @*@Html.ValidationMessageFor(model => model.TagId, "", new { @class = "text-danger" })*@

        </div>

        <div class="mb-3">
            名稱

            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            地址

            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            經度

            @Html.EditorFor(model => model.PositionX, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PositionX, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            緯度

            @Html.EditorFor(model => model.PositionY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PositionY, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            描述

            @*<textarea class="form-control w-100 " rows="15" id="Description" name="Description">@Model.Description</textarea>*@
            @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@

            <textarea name="Description">@Model.Description</textarea>
            <script>
                CKEDITOR.replace('Description');
            </script>

            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


        </div>

        <div class="mb-3">
            網站

            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @allowhtml = true } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">

            <input type="submit" value="儲存" class="btn btn-primary" />

        </div>
    </div>
}

<div>
    @Html.ActionLink("返回景點列表", "Index", null, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // 监听地区下拉选单的变化
            $('#RegionId').change(function () {
                var regionId = $(this).val(); // 获取选中的地区Id
                var townDropdown = $('#TownId'); // 城镇下拉选单

                // 清空城镇下拉选单的选项
                townDropdown.empty();

                // 如果选择了有效的地区Id
                if (regionId !== '') {
                    // 发送AJAX请求获取相应地区的城镇数据
                    $.ajax({
                        url: '/Attractions/LoadTowns', // 替换成对应的控制器和方法
                        type: 'POST',
                        dataType: 'json',
                        data: { regionId: regionId },
                        success: function (response) {
                            // 根据返回的城镇数据，动态添加选项到城镇下拉选单
                            $.each(response, function (index, town) {
                                townDropdown.append($('<option></option>').val(town.Id).text(town.Name));
                            });
                        },
                        error: function () {
                            console.error('Failed to load towns.');
                        }
                    });
                }
            });
        });
    </script>
}

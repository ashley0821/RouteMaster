@model RouteMaster.Models.ViewModels.AttractionCreateVM

@{
    ViewBag.Title = "新增景點";
}

<h2>新增景點</h2>


@using (Html.BeginForm("Create", "Attractions", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="row">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="mb-3">
        類別


        @Html.DropDownListFor(model => model.AttractionCategoryId, new SelectList(ViewBag.AttractionCategories, "Id", "Name"), "", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.AttractionCategoryId, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        縣市

        @Html.DropDownListFor(model => model.RegionId, new SelectList(ViewBag.Regions, "Id", "Name"), "", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        鄉鎮市區

        @Html.DropDownListFor(model => model.TownId, Enumerable.Empty<SelectListItem>(), "", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.TownId, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        標籤

        @*@Html.DropDownListFor(model => model.TagId, new SelectList(ViewBag.Tags, "Id", "Name"), "", new { @class = "form-select", multiple = "multiple" })*@


        @foreach (var tag in ViewBag.Tags)
        {
            <div>
                <input type="checkbox" name="TagId" value="@tag.Id" id="tag_@tag.Id">
                <label for="tag_@tag.Id">@tag.Name</label>
            </div>
        }

        @Html.ValidationMessageFor(model => model.TagId, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        名稱

        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        地址

        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        經度

        @Html.EditorFor(model => model.PositionX, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PositionX, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        緯度

        @Html.EditorFor(model => model.PositionY, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PositionY, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        描述

        @*<textarea class="form-control w-100 " rows="15" id="Description" name="Description"></textarea>*@
        @*@Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control"} })*@

        <textarea name="Description"></textarea>
        <script>
            CKEDITOR.replace('Description');
        </script>
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

    </div>

    <div class="mb-3">
        網站

        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @allowhtml = true } })
        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })

    </div>

    <div class="w-50 mb-3">
        圖片
        <div class="drop-zone" id="dropZone">
            <label for="files" class="d-block w-100 h-100" id="fileLabel">
                <div class="w-100 h-100 d-flex justify-content-center align-items-center">
                    <botton class="btn btn-primary"><i class="fa-solid fa-image"></i>新增照片</botton>
                    <span class="small d-block">或</span>
                    <p>拖曳照片到這裡</p>
                </div>
            </label>
        </div>
        <input id="files" type="file" name="files" class="form-control" multiple="multiple" accept="image/*" />
        <div class="image-preview" id="imagePreview"></div>
        <div class="d-flex justify-content-end">
            <p class="small m-0" id="uploadContent"></p>
        </div>
        <div class="progress-bar-div ms-auto d-none">
            <div class="progress-bar h-100 d-none"></div>
        </div>
    </div>

    <div class="mb-3">

        <input type="submit" value="新增" class="btn btn-success" id="submit-btn" />

    </div>
</div>
}

<div>
    @Html.ActionLink("返回景點列表", "Index", null, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    

    <script src="~/Scripts/UploadImage.js"></script>
    <script>
        $(document).ready(function () {
            // 监听地区下拉选单的变化
            $('#RegionId').change(function () {
                var regionId = $(this).val(); // 获取选中的地区Id
                var townDropdown = $('#TownId'); // 城镇下拉选单

                // 清空城镇下拉选单的选项
                townDropdown.empty();

                // 如果选择了有效的地区Id
                if (regionId !== '') {
                    // 发送AJAX请求获取相应地区的城镇数据
                    $.ajax({
                        url: '/Attractions/LoadTowns', // 替换成对应的控制器和方法
                        type: 'POST',
                        dataType: 'json',
                        data: { regionId: regionId },
                        success: function (response) {
                            // 根据返回的城镇数据，动态添加选项到城镇下拉选单
                            $.each(response, function (index, town) {
                                townDropdown.append($('<option></option>').val(town.Id).text(town.Name));
                            });
                        },
                        error: function () {
                            console.error('Failed to load towns.');
                        }
                    });
                }
            });

        });
    </script>

}
